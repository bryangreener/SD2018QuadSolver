QS_Input_Validator <- function(x) {
# User-prompt for input: values 'a', 'b', and 'c'
a <- readline("what is the value of 'a'? ")
b <- readline("what is the value of 'b'? ")
c <- readline("what is the value of 'c'? ")
# Conversion from character to numeric (IEEEfp double precision and integer format is implemented currently)
a_convert <- as.numeric(a)
b_convert <- as.numeric(b)
c_convert <- as.numeric(c)
# Flags for incorrect input (specifically missing values, character values, and Inf values provided)
# Note: 'a', 'b', and 'c' are evaluated individually
# - if non-numeric or Inf values are present, an error message is returned to user,
#    along with the value that was converted to NA
# - NaN's are caught at this step, will return the error message if inputted
if (is.na(a_convert) || is.infinite(a_convert)) {
output <- paste0("Error: Non-numeric or infinite values have been detected.: ", a_convert)
values <- c(a, b, c)
output <- list(Message = output, Input = values)
return(output)
}
else if (is.na(b_convert) || is.infinite(b_convert)) {
output <- paste0("Error: Non-numeric or infinite values have been detected.: ", b_convert)
values <- c(a, b, c)
output <- list(Message = output, Input = values)
return(output)
}
else if (is.na(c_convert) || is.infinite(c_convert)) {
output <- paste0("Error: Non-numeric or infinite values have been detected.: ", c_convert)
values <- c(a, b, c)
output <- list(Message = output, Input = values)
return(output)
}
# Checking if a = 0
# - if a = 0 is TRUE, a message is returned indicating a cannot equal zero
# - if a = 0 is FALSE, a message is returned indicating input meets criteria, along with input values
if(a != 0) {
output <- paste("Message: Input meets criteria for calculations.")
values <- c(a_convert, b_convert, c_convert)
output <- list(Message = output, Input = values)
}
else {
output <- paste0("Error: Value 'a' cannot equal zero")
values <- c(a, b, c)
output <- list(Message = output, Input = values)
return(output)
}
return(output)
}
QS_Input_Validator()
Inf7
1
.Machine
